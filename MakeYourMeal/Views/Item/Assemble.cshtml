@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<BaBoMaZso.MakeYourMeal.Models.MealViewModel>
@using BaBoMaZso.MakeYourMeal.Models
@using System.Linq
@using DotNetNuke.Entities.Portals

<form id="mealForm">
    @Html.AntiForgeryToken()

    <input type="hidden" name="SelectedPasta" id="SelectedPastaHidden" />
    <input type="hidden" name="SelectedSauce" id="SelectedSauceHidden" />
    <input type="hidden" name="SelectedToppings1" id="SelectedToppings1Hidden" />
    <input type="hidden" name="SelectedToppings2" id="SelectedToppings2Hidden" />
    <input type="hidden" name="SelectedExtras" id="SelectedExtrasHidden" />

    <div id="Items-@Dnn.ModuleContext.ModuleId" class="meal-wizard">

        @helper RenderStep(string title, IEnumerable<ProductOptionViewModel> options, string inputName, bool singleSelect, string limitClass = "", int step = 1)
        {
            <div class="wizard-step" data-step="@step" style="@(step == 1 ? "" : "display:none;")">
                <h3>@title</h3>
                <div class="d-flex flex-wrap">
                    @foreach (var item in (options ?? new List<ProductOptionViewModel>()))
                    {
                        var fullImageUrl = item.ImageUrl;

                        <div class="card m-2" style="width: 150px;">
                            @if (!string.IsNullOrEmpty(fullImageUrl))
                            {
                                <img src="@fullImageUrl" alt="@item.Name" class="card-img-top" style="height: 200px; object-fit: contain;" />
                            }
                            <div class="card-body p-2 text-center">
                                <input class="form-check-input @(limitClass)"
                                       type="@(singleSelect ? "radio" : "checkbox")"
                                       id="@(inputName + "_" + item.Sku)"
                                       name="@inputName@(singleSelect ? "" : "[]")"
                                       value="@item.Sku"
                                       @(singleSelect ? "required" : "") />
                                <label class="form-check-label" for="@(inputName + "_" + item.Sku)">@item.Name</label>
                            </div>
                        </div>
                    }
                </div>
                <div class="wizard-nav mt-3">
                    <button type="button" class="btnvissza" @(step == 1 ? "disabled" : "")>Vissza</button>
                    <button type="button" class="btnkov">Tovább</button>
                </div>
            </div>
        }


        @RenderStep("Válassz egy tésztát!", Model.Pastas, "SelectedPasta", true, "", 1)
        @RenderStep("Válassz egy szószt!", Model.Sauces, "SelectedSauce", true, "", 2)
        @RenderStep("Válassz max 2 feltétet!", Model.Toppings1, "SelectedToppings1", false, "limit-top1", 3)
        @RenderStep("Válassz max 2 további feltétet!", Model.Toppings2, "SelectedToppings2", false, "limit-top2", 4)
        @RenderStep("Extrák", Model.Extras, "SelectedExtras", false, "", 5)

        <div class="wizard-step" data-step="6" style="display:none;">
            <h3>Összegzés</h3>
            <div id="meal-summary" class="mb-3"></div>

            <div class="wizard-nav mt-3">
                <button type="button" class="btnvissza">Vissza</button>
                <button type="button" id="submitMeal" class="btnkosarba">Kosárba helyezés</button>
            </div>
        </div>


    </div>
</form>

<script type="text/javascript">
    (function ($) {
        var currentStep = 1;
        var totalSteps = 6;

        function showStep(step) {
            $('.wizard-step').hide().removeClass('active');
            $('.wizard-step[data-step="' + step + '"]').show().addClass('active');
        }

        function updateSummary() {
            var summary = [];

            function collect(name, label) {
                var selected = $('input[name="' + name + '"]:checked, input[name="' + name + '[]"]:checked')
                    .map(function () { return $(this).next('label').text().trim(); })
                    .get();
                if (selected.length) {
                    summary.push(label + ": " + selected.join(', '));
                }
            }

            collect('SelectedPasta', 'Tészta');
            collect('SelectedSauce', 'Szósz');
            collect('SelectedToppings1', 'Feltét 1');
            collect('SelectedToppings2', 'Feltét 2');
            collect('SelectedExtras', 'Extrák');

            $('#meal-summary').html(summary.join('<br/>'));
        }

        function limitCheckboxes(selector, max) {
            $(document).on('change', selector, function () {
                if ($(selector + ':checked').length > max) {
                    this.checked = false;
                    alert('Maximum ' + max + ' választható!');
                }
            });
        }

        $(document).ready(function () {
            showStep(currentStep);

            $('.btnkov').click(function () {
                if (currentStep < totalSteps) {
                    currentStep++;
                    showStep(currentStep);
                    if (currentStep === totalSteps) updateSummary();
                }
            });

            $('.btnvissza').click(function () {
                if (currentStep > 1) {
                    currentStep--;
                    showStep(currentStep);
                }
            });

            limitCheckboxes('.limit-top1', 2);
            limitCheckboxes('.limit-top2', 2);

            $('#submitMeal').click(function (e) {
                e.preventDefault();

                var skuList = [];
                var qtyList = [];

                var pasta = $('input[name="SelectedPasta"]:checked').val();
                var sauce = $('input[name="SelectedSauce"]:checked').val();

                if (!pasta) {
                    alert("Kérlek, válassz egy tésztát!");
                    return;
                }
                if (!sauce) {
                    alert("Kérlek, válassz egy szószt!");
                    return;
                }

                skuList.push(pasta);
                qtyList.push(1);

                skuList.push(sauce);
                qtyList.push(1);

                var toppings1 = $('input[name="SelectedToppings1[]"]:checked').map(function () { return this.value; }).get();
                var toppings2 = $('input[name="SelectedToppings2[]"]:checked').map(function () { return this.value; }).get();
                var extras = $('input[name="SelectedExtras[]"]:checked').map(function () { return this.value; }).get();

                toppings1.concat(toppings2).concat(extras).forEach(function (sku) {
                    skuList.push(sku);
                    qtyList.push(1);
                });

                if (skuList.length === 0) {
                    alert("Nem választottál ki egyetlen elemet sem.");
                    return;
                }

                var url = '/Cart?AddSku=' + skuList.join(',') + '&AddSkuQty=' + qtyList.join(',');
                window.location.href = url;
            });
        });
    })(jQuery);
</script>


