@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<BaBoMaZso.MakeYourMeal.Models.MealViewModel>
@using System.Linq
@using System.Collections.Generic
@using SelectListItem = System.Web.Mvc.SelectListItem

<form action="@Url.Action("Assemble", "Item")" method="post" class="make-your-meal-form" id="mealForm">
    @Html.AntiForgeryToken()

    <div id="Items-@Dnn.ModuleContext.ModuleId" class="meal-wizard">

        <!-- 1. Tészta -->
        <div class="wizard-step" data-step="1">
            <h3>1. Tészta (max 1 választható)</h3>
            @{
                var pastas = Model != null && Model.Pastas != null ? Model.Pastas : Enumerable.Empty<SelectListItem>();
            }
            @if (pastas.Count() > 0)
            {
                foreach (var item in pastas)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="pasta_@item.Value" name="SelectedPasta"
                               value="@item.Value" required @(item.Selected ? "checked" : "") />
                        <label class="form-check-label" for="pasta_@item.Value">@item.Text</label>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-warning">Nincsenek elérhető tészták.</div>
            }
            <div class="wizard-nav mt-3">
                <button type="button" class="btn btn-secondary btn-prev" disabled>Vissza</button>
                <button type="button" class="btn btn-primary btn-next">Tovább</button>
            </div>
        </div>

        <!-- 2. Szósz -->
        <div class="wizard-step" data-step="2" style="display:none;">
            <h3>2. Szósz (max 1 választható)</h3>
            @{
                var sauces = Model != null && Model.Sauces != null ? Model.Sauces : Enumerable.Empty<SelectListItem>();
            }
            @if (sauces.Count() > 0)
            {
                foreach (var item in sauces)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="radio" id="sauce_@item.Value" name="SelectedSauce"
                               value="@item.Value" required @(item.Selected ? "checked" : "") />
                        <label class="form-check-label" for="sauce_@item.Value">@item.Text</label>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-warning">Nincsenek elérhető szószok.</div>
            }
            <div class="wizard-nav mt-3">
                <button type="button" class="btn btn-secondary btn-prev">Vissza</button>
                <button type="button" class="btn btn-primary btn-next">Tovább</button>
            </div>
        </div>

        <!-- 3. Feltét 1 -->
        <div class="wizard-step" data-step="3" style="display:none;">
            <h3>3. Feltét 1 (max 2 választható)</h3>
            @{
                var toppings1 = Model != null && Model.Toppings1 != null ? Model.Toppings1 : Enumerable.Empty<SelectListItem>();
            }
            @if (toppings1.Count() > 0)
            {
                foreach (var item in toppings1)
                {
                    <div class="form-check">
                        <input class="form-check-input limit-top1" type="checkbox" name="SelectedToppings1" value="@item.Value" />
                        <label class="form-check-label">@item.Text</label>
                    </div>
                }
            }
            <div class="wizard-nav mt-3">
                <button type="button" class="btn btn-secondary btn-prev">Vissza</button>
                <button type="button" class="btn btn-primary btn-next">Tovább</button>
            </div>
        </div>

        <!-- 4. Feltét 2 -->
        <div class="wizard-step" data-step="4" style="display:none;">
            <h3>4. Feltét 2 (max 2 választható)</h3>
            @{
                var toppings2 = Model != null && Model.Toppings2 != null ? Model.Toppings2 : Enumerable.Empty<SelectListItem>();
            }
            @if (toppings2.Count() > 0)
            {
                foreach (var item in toppings2)
                {
                    <div class="form-check">
                        <input class="form-check-input limit-top2" type="checkbox" name="SelectedToppings2" value="@item.Value" />
                        <label class="form-check-label">@item.Text</label>
                    </div>
                }
            }
            <div class="wizard-nav mt-3">
                <button type="button" class="btn btn-secondary btn-prev">Vissza</button>
                <button type="button" class="btn btn-primary btn-next">Tovább</button>
            </div>
        </div>

        <!-- 5. Extrák -->
        <div class="wizard-step" data-step="5" style="display:none;">
            <h3>5. Extrák</h3>
            @{
                var extras = Model != null && Model.Extras != null ? Model.Extras : Enumerable.Empty<SelectListItem>();
            }
            @if (extras.Count() > 0)
            {
                foreach (var item in extras)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="SelectedExtras" value="@item.Value" />
                        <label class="form-check-label">@item.Text</label>
                    </div>
                }
            }
            <div class="wizard-nav mt-3">
                <button type="button" class="btn btn-secondary btn-prev">Vissza</button>
                <button type="button" class="btn btn-primary btn-next">Tovább</button>
            </div>
        </div>

        <!-- 6. Összegzés -->
        <div class="wizard-step" data-step="6" style="display:none;">
            <h3>6. Összegzés és kosárba helyezés</h3>
            <div id="meal-summary"></div>
            <div class="wizard-nav mt-3">
                <button type="button" class="btn btn-secondary btn-prev">Vissza</button>
                <button type="submit" class="btn btn-success">Kosárba helyezés</button>
            </div>
        </div>

    </div>
</form>

<script type="text/javascript">
    (function ($) {
        var currentStep = 1;
        var totalSteps = 6;

        function showStep(step) {
            $('.wizard-step').hide().removeClass('active');
            $('.wizard-step[data-step="' + step + '"]').show().addClass('active');
        }

        function updateSummary() {
            var summary = [];
            var pasta = $('input[name="SelectedPasta"]:checked').parent().text().trim();
            if (pasta) summary.push('Tészta: ' + pasta);
            var sauce = $('input[name="SelectedSauce"]:checked').parent().text().trim();
            if (sauce) summary.push('Szósz: ' + sauce);
            var top1 = $('input[name="SelectedToppings1"]:checked').map(function () {
                return $(this).parent().text().trim();
            }).get();
            if (top1.length) summary.push('Feltét1: ' + top1.join(', '));
            var top2 = $('input[name="SelectedToppings2"]:checked').map(function () {
                return $(this).parent().text().trim();
            }).get();
            if (top2.length) summary.push('Feltét2: ' + top2.join(', '));
            var extras = $('input[name="SelectedExtras"]:checked').map(function () {
                return $(this).parent().text().trim();
            }).get();
            if (extras.length) summary.push('Extrák: ' + extras.join(', '));
            $('#meal-summary').html(summary.join('<br/>'));
        }

        function limitCheckboxes(selector, max) {
            $(document).on('change', selector, function () {
                if ($(selector + ':checked').length > max) {
                    this.checked = false;
                    alert('Maximum ' + max + ' lehetőséget választhatsz!');
                }
            });
        }

        $(document).ready(function () {
            showStep(currentStep);

            $('.btn-next').click(function () {
                currentStep = Math.min(currentStep + 1, totalSteps);
                showStep(currentStep);
                if (currentStep === totalSteps) updateSummary();
            });

            $('.btn-prev').click(function () {
                currentStep = Math.max(currentStep - 1, 1);
                showStep(currentStep);
            });

            limitCheckboxes('.limit-top1', 2);
            limitCheckboxes('.limit-top2', 2);
        });
    })(jQuery);
</script>
